package entity;
// Generated Feb 14, 2017 6:22:11 PM by Hibernate Tools 4.3.1


import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Message generated by hbm2java
 */
@Entity
@Table(name="message"
    ,catalog="projekat"
)
public class Message  implements java.io.Serializable {

    public static final int CANCELED_EVENT = 0;
    public static final int CHANGED_PERFORMER = 1;
    public static final int CHANGHED_HOURS = 2;

     private Integer idmessage;
     private Reservation reservation;
     private int messageType;
     private boolean shown;

    public Message() {
    }

    public Message(Reservation reservation, int messageType, boolean shown) {
       this.reservation = reservation;
       this.messageType = messageType;
       this.shown = shown;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="IDMessage", unique=true, nullable=false)
    public Integer getIdmessage() {
        return this.idmessage;
    }
    
    public void setIdmessage(Integer idmessage) {
        this.idmessage = idmessage;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="IDReservation", nullable=false)
    public Reservation getReservation() {
        return this.reservation;
    }
    
    public void setReservation(Reservation reservation) {
        this.reservation = reservation;
    }

    
    @Column(name="MessageType", nullable=false)
    public int getMessageType() {
        return this.messageType;
    }
    
    public void setMessageType(int messageType) {
        this.messageType = messageType;
    }

    
    @Column(name="Shown", nullable=false)
    public boolean isShown() {
        return this.shown;
    }
    
    public void setShown(boolean shown) {
        this.shown = shown;
    }




}


