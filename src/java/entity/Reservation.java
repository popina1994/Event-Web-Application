package entity;
// Generated Feb 14, 2017 6:22:11 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Reservation generated by hbm2java
 */
@Entity
@Table(name="reservation"
    ,catalog="projekat"
)
public class Reservation  implements java.io.Serializable {

    public static final int RESERVED = 1;
    public static final int CANCELED = 0;
    public static final int BOUGHT = 2;
    public static final int EXPIRED = 3;
    
    public static final int IS_FULL = 1;
    public static final int IS_DAY = 0;
     private Integer idreservation;
     private Event event;
     private User user;
     private Date eventTime;
     private Date reservationTime;
     private int status;
     private int reservationType;
     private Comment comment;
     private Rating rating;
     private int ticketNum;


     private Set<Message> messages = new HashSet<Message>(0);

    public Reservation() {
    }

	
    public Reservation(Event event, User user, Date eventTime, Date reservationTime, int status, int reservationType, int ticketNum) {
        this.event = event;
        this.user = user;
        this.eventTime = eventTime;
        this.reservationTime = reservationTime;
        this.status = status;
        this.reservationType = reservationType;
        this.ticketNum = ticketNum;
    }
    public Reservation(Event event, User user, Date eventTime, Date reservationTime, int status, int reservationType, Comment comment, Rating rating, Set<Message> messages) {
       this.event = event;
       this.user = user;
       this.eventTime = eventTime;
       this.reservationTime = reservationTime;
       this.status = status;
       this.reservationType = reservationType;
       this.comment = comment;
       this.rating = rating;
       this.messages = messages;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="IDReservation", unique=true, nullable=false)
    public Integer getIdreservation() {
        return this.idreservation;
    }
    
    public void setIdreservation(Integer idreservation) {
        this.idreservation = idreservation;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="IDEvent", nullable=false)
    public Event getEvent() {
        return this.event;
    }
    
    public void setEvent(Event event) {
        this.event = event;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="IDUser", nullable=false)
    public User getUser() {
        return this.user;
    }
    
    public void setUser(User user) {
        this.user = user;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="EventTime", nullable=false, length=10)
    public Date getEventTime() {
        return this.eventTime;
    }
    
    public void setEventTime(Date eventTime) {
        this.eventTime = eventTime;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="ReservationTime", nullable=false, length=19)
    public Date getReservationTime() {
        return this.reservationTime;
    }
    
    public void setReservationTime(Date reservationTime) {
        this.reservationTime = reservationTime;
    }

    
    @Column(name="Status", nullable=false)
    public int getStatus() {
        return this.status;
    }
    
    public void setStatus(int status) {
        this.status = status;
    }

    
    @Column(name="ReservationType", nullable=false)
    public int getReservationType() {
        return this.reservationType;
    }
    
    public void setReservationType(int reservationType) {
        this.reservationType = reservationType;
    }

@OneToOne(fetch=FetchType.EAGER, mappedBy="reservation")
    public Comment getComment() {
        return this.comment;
    }
    
    public void setComment(Comment comment) {
        this.comment = comment;
    }

@OneToOne(fetch=FetchType.EAGER, mappedBy="reservation")
    public Rating getRating() {
        return this.rating;
    }
    
    public void setRating(Rating rating) {
        this.rating = rating;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="reservation")
    public Set<Message> getMessages() {
        return this.messages;
    }
    
    public void setMessages(Set<Message> messages) {
        this.messages = messages;
    }
    
    @Column(name="TicketNum", nullable=false)
    public int getTicketNum() {
        return ticketNum;
    }

    public void setTicketNum(int ticketNum) {
        this.ticketNum = ticketNum;
    }



}


