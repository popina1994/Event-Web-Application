package entity;
// Generated Feb 14, 2017 6:22:11 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name="user"
    ,catalog="projekat"
)
public class User  implements java.io.Serializable {

    public static final int REGISTERED_UNCONFIRMED_USER = 2;
    public static final int ADMINISTRATOR = 1;
    public static final int REGISTERED_CONFIRMED_USER = 0;
    public static final int REGISTERED_REJECTED_USER = 3;
     private Integer iduser;
     private String userName;
     private String password;
     private String firstName;
     private String lastName;
     private String email;
     private String phone;
     private int userType;
     private boolean blocked;
     private Date lastAccessTime;
     private int unsoldTickets;
     private Set<Reservation> reservations = new HashSet<Reservation>(0);

    public User() {
    }

	
    public User(String userName, String password, String firstName, String lastName, String email, String phone, int userType, boolean blocked, Date lastAccessTime, int unsoldTickets) {
        this.userName = userName;
        this.password = password;
        this.firstName = firstName;
        this.lastName = lastName;
        this.email = email;
        this.phone = phone;
        this.userType = userType;
        this.blocked = blocked;
        this.lastAccessTime = lastAccessTime;
        this.unsoldTickets = unsoldTickets;
    }
    public User(String userName, String password, String firstName, String lastName, String email, String phone, int userType, boolean blocked, Date lastAccessTime, int unsoldTickets, Set<Reservation> reservations) {
       this.userName = userName;
       this.password = password;
       this.firstName = firstName;
       this.lastName = lastName;
       this.email = email;
       this.phone = phone;
       this.userType = userType;
       this.blocked = blocked;
       this.lastAccessTime = lastAccessTime;
       this.unsoldTickets = unsoldTickets;
       this.reservations = reservations;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="IDUser", unique=true, nullable=false)
    public Integer getIduser() {
        return this.iduser;
    }
    
    public void setIduser(Integer iduser) {
        this.iduser = iduser;
    }

    
    @Column(name="UserName", nullable=false, length=30)
    public String getUserName() {
        return this.userName;
    }
    
    public void setUserName(String userName) {
        this.userName = userName;
    }

    
    @Column(name="Password", nullable=false, length=12)
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }

    
    @Column(name="FirstName", nullable=false, length=30)
    public String getFirstName() {
        return this.firstName;
    }
    
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    
    @Column(name="LastName", nullable=false, length=30)
    public String getLastName() {
        return this.lastName;
    }
    
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    
    @Column(name="Email", nullable=false, length=40)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    
    @Column(name="Phone", nullable=false, length=15)
    public String getPhone() {
        return this.phone;
    }
    
    public void setPhone(String phone) {
        this.phone = phone;
    }

    
    @Column(name="UserType", nullable=false)
    public int getUserType() {
        return this.userType;
    }
    
    public void setUserType(int userType) {
        this.userType = userType;
    }

    
    @Column(name="Blocked", nullable=false)
    public boolean isBlocked() {
        return this.blocked;
    }
    
    public void setBlocked(boolean blocked) {
        this.blocked = blocked;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="LastAccessTime", nullable=false, length=19)
    public Date getLastAccessTime() {
        return this.lastAccessTime;
    }
    
    public void setLastAccessTime(Date lastAccessTime) {
        this.lastAccessTime = lastAccessTime;
    }

    
    @Column(name="UnsoldTickets", nullable=false)
    public int getUnsoldTickets() {
        return this.unsoldTickets;
    }
    
    public void setUnsoldTickets(int unsoldTickets) {
        this.unsoldTickets = unsoldTickets;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="user")
    public Set<Reservation> getReservations() {
        return this.reservations;
    }
    
    public void setReservations(Set<Reservation> reservations) {
        this.reservations = reservations;
    }




}


